Import( Split( 'name root' ) )

### configure ##################################################################
build = root.Clone()

if not build.GetOption( 'clean' ):
	setup = Configure( build )

	if name == 'posix':
		if not setup.CheckLibWithHeader( 'uuid', 'uuid/uuid.h', 'c' ): Exit( 1 )
	elif name == 'darwin':
		if not setup.CheckCHeader( 'uuid/uuid.h' ): Exit( 1 )

	build = setup.Finish()

### build ######################################################################
build.Append( LIBS = [ 'executable' ] )

if name == 'posix':
	build.Append( RPATH = "'$$$${ORIGIN}/../library'" )

out = build.Program( '#binary/uuid_test', Glob( '*.cpp' ) )
build.SideEffect( Glob( '*.rpo' ), out )
build.Clean( out, '#binary/uuid_test.log' )
